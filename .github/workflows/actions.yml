name: ci-pipeline
on: [push, pull_request]
jobs:
  run:
    name: Run
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb:10.6
        env:
          MYSQL_DATABASE: db
          MYSQL_USER: db
          MYSQL_PASSWORK: db
          MYSQL_ROOT_PASSWORD: db
        ports:
          - 3306/tcp
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.0']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: |
            php-cs-fixer,
            phpstan,
            phpstan/extension-installer,
            phpstan/phpstan-strict-rules,
            phpstan/phpstan-phpunit,
            phpstan/phpstan-deprecation-rules,
            ergebnis/phpstan-rules,
            thecodingmachine/phpstan-strict-rules,
            thecodingmachine/phpstan-safe-rule,
            psalm,
            sensiolabs-de/deptrac
          extensions: ctype, iconv
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: DEBUG
        working-directory: ./app
        run: ls -lah
      - name: Bootstrap app
        working-directory: ./app
        run: composer run-script bootstrap
      - name: Run lint
        run: php-cs-fixer fix --allow-risky=yes -vvv --dry-run
      - name: Run tests
        working-directory: ./app
        run: vendor/bin/pest

